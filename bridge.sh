#!/bin/bash

# This script prepares the environment for the AI bridge.

echo "--- [–≠—Ç–∞–ø 1/4] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ—Å—Ç–∞ –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ Gemini –∏ Claude ---"

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π ---
if ! command -v python3 &> /dev/null || ! command -v pip3 &> /dev/null; then
    echo "–û—à–∏–±–∫–∞: Python 3 –∏/–∏–ª–∏ pip3 –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö."
    exit 1
fi
echo "Python 3 –∏ pip3 –Ω–∞–π–¥–µ–Ω—ã."

# --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫ ---
echo "--- [–≠—Ç–∞–ø 2/4] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö Python-–±–∏–±–ª–∏–æ—Ç–µ–∫ (selenium) ---"
pip3 install --quiet --upgrade selenium

# --- –°–æ–∑–¥–∞–Ω–∏–µ Python-—Å–∫—Ä–∏–ø—Ç–∞ –º–æ—Å—Ç–∞ v0.3 ---
echo "--- [–≠—Ç–∞–ø 3/4] –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –º–æ—Å—Ç–∞: ai_bridge_v0.3.py ---"
cat << 'EOF' > ai_bridge_v0.3.py
import time
import sys
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, NoSuchElementException

# --- CSS —Å–µ–ª–µ–∫—Ç–æ—Ä—ã ---
GEMINI_INPUT_BOX = "div.input-area" 
GEMINI_RESPONSE_CONTAINER = "div.response-container"
CLAUDE_INPUT_BOX = 'div[contenteditable="true"]'
CLAUDE_SEND_BUTTON = 'button[aria-label="Send Message"]'
CLAUDE_RESPONSE_CONTAINER = "div.font-claude-message" 

def find_chat_tabs(driver):
    gemini_handle, claude_handle = None, None
    for handle in driver.window_handles:
        driver.switch_to.window(handle)
        if "gemini.google.com" in driver.current_url:
            gemini_handle = handle
        elif "claude.ai" in driver.current_url:
            claude_handle = handle
    if not all([gemini_handle, claude_handle]):
        return None, None
    return gemini_handle, claude_handle

def get_latest_message_text(driver, container_selector):
    try:
        responses = driver.find_elements(By.CSS_SELECTOR, container_selector)
        return responses[-1].text if responses else None
    except (NoSuchElementException, TimeoutException):
        return None

def send_message(driver, input_selector, message, button_selector=None):
    try:
        input_box = WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.CSS_SELECTOR, input_selector)))
        input_box.clear()
        input_box.send_keys(message)
        if button_selector:
            send_button = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.CSS_SELECTOR, button_selector)))
            send_button.click()
        else:
            from selenium.webdriver.common.keys import Keys
            input_box.send_keys(Keys.RETURN)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")

def main():
    chrome_options = Options()
    chrome_options.add_experimental_option("debuggerAddress", "127.0.0.1:9222")
    try:
        print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —Å–µ–∞–Ω—Å—É Chrome –Ω–∞ –ø–æ—Ä—Ç—É 9222...")
        driver = webdriver.Chrome(options=chrome_options)
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ Chrome —Å —Ñ–ª–∞–≥–æ–º --remote-debugging-port=9222")
        sys.exit(1)

    gemini_tab, claude_tab = find_chat_tabs(driver)
    if not gemini_tab:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∫–ª–∞–¥–∫–∏ Gemini –∏ Claude. –û—Ç–∫—Ä–æ–π—Ç–µ –∏—Ö –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç.")
        sys.exit(1)
    
    print("–í–∫–ª–∞–¥–∫–∏ –Ω–∞–π–¥–µ–Ω—ã. –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ—Å—Ç...")
    driver.switch_to.window(gemini_tab)
    last_gemini_message = get_latest_message_text(driver, GEMINI_RESPONSE_CONTAINER)
    driver.switch_to.window(claude_tab)
    last_claude_message = get_latest_message_text(driver, CLAUDE_RESPONSE_CONTAINER)
    print("–ú–æ—Å—Ç v0.3 –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–Ω–∏–µ...")

    while True:
        try:
            driver.switch_to.window(gemini_tab)
            current_gemini_message = get_latest_message_text(driver, GEMINI_RESPONSE_CONTAINER)
            if current_gemini_message and current_gemini_message != last_gemini_message:
                print("Gemini üó£Ô∏è -> Claude")
                driver.switch_to.window(claude_tab)
                send_message(driver, CLAUDE_INPUT_BOX, current_gemini_message, CLAUDE_SEND_BUTTON)
                last_gemini_message = current_gemini_message

            driver.switch_to.window(claude_tab)
            current_claude_message = get_latest_message_text(driver, CLAUDE_RESPONSE_CONTAINER)
            if current_claude_message and current_claude_message != last_claude_message:
                print("Claude üó£Ô∏è -> Gemini")
                driver.switch_to.window(gemini_tab)
                send_message(driver, GEMINI_INPUT_BOX, current_claude_message) 
                last_claude_message = current_claude_message
            time.sleep(3)
        except Exception as e:
            print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –≥–ª–∞–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}. –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
            break

if __name__ == "__main__":
    main()
EOF

# --- –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Chrome –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏ ---
echo "--- [–≠—Ç–∞–ø 4/4] –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Chrome: start_chrome_debug.sh ---"
cat << 'EOF' > start_chrome_debug.sh
#!/bin/bash
echo "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å—Ç–∏—Ç Google Chrome –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏ –Ω–∞ –ø–æ—Ä—Ç—É 9222."
echo "–í–ê–ñ–ù–û: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–∫—Ä–æ–π—Ç–µ –í–°–ï –æ—Ç–∫—Ä—ã—Ç—ã–µ –æ–∫–Ω–∞ Chrome –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º."
read -p "–ù–∞–∂–º–∏—Ç–µ Enter, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã..."

if [[ "$(uname)" == "Darwin" ]]; then # macOS
    /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --remote-debugging-port=9222 --user-data-dir="$HOME/Chrome-debug-profile"
elif [[ "$(expr substr $(uname -s) 1 5)" == "Linux" ]]; then # Linux
    google-chrome --remote-debugging-port=9222 --user-data-dir="$HOME/Chrome-debug-profile"
else # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º Windows
    echo "–î–ª—è Windows, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ CMD:"
    echo 'start chrome.exe --remote-debugging-port=9222 --user-data-dir="C:\Chrome-debug-profile"'
fi
EOF

# --- –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ ---
chmod +x start_chrome_debug.sh
echo ""
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "--------------------------------------------------------"
echo "–í–ê–®–ò –î–ê–õ–¨–ù–ï–ô–®–ò–ï –î–ï–ô–°–¢–í–ò–Ø:"
echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Chrome –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏ –∫–æ–º–∞–Ω–¥–æ–π: ./start_chrome_debug.sh"
echo "2. –í –û–¢–ö–†–´–í–®–ï–ú–°–Ø –û–ö–ù–ï –ë–†–ê–£–ó–ï–†–ê –æ—Ç–∫—Ä–æ–π—Ç–µ –≤–∫–ª–∞–¥–∫–∏ —Å –Ω–∞—à–∏–º–∏ —á–∞—Ç–∞–º–∏."
echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–æ—Å—Ç –∫–æ–º–∞–Ω–¥–æ–π: python3 ai_bridge_v0.3.py"
echo "--------------------------------------------------------"