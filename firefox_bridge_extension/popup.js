// ü§ñ COPILOT POPUP CONTROL PANEL - –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–∞—Å–∞—Ç–µ–ª—å–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–µ–π

let startTime = Date.now();

// URLs –Ω–∞—à–∏—Ö –±—Ä–∞—Ç—å–µ–≤
const CLAUDE_URL = "https://claude.ai/chat/4e832754-4fa3-4a1e-a7a2-37ee082299fc";
const GEMINI_URL = "https://gemini.google.com/app/2dd8a54e7435506e";

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    console.log("ü§ñ COPILOT: –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!");
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
    document.getElementById('open-claude').addEventListener('click', openClaude);
    document.getElementById('open-gemini').addEventListener('click', openGemini);
    document.getElementById('start-rescue').addEventListener('click', startRescue);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç—É—Å–∞
    updateStatus();
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
    setInterval(updateStatus, 2000);
    setInterval(updateUptime, 1000);
});

function openClaude() {
    console.log("üîµ COPILOT: –û—Ç–∫—Ä—ã–≤–∞–µ–º Claude 4 Pro –¥–ª—è —Å–ø–∞—Å–µ–Ω–∏—è");
    chrome.tabs.create({ url: CLAUDE_URL });
    updateStatusElement('claude-status', 'üü° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...', 'warning');
}

function openGemini() {
    console.log("üü° COPILOT: –û—Ç–∫—Ä—ã–≤–∞–µ–º Gemini 2.5 Pro –¥–ª—è —Å–ø–∞—Å–µ–Ω–∏—è");
    chrome.tabs.create({ url: GEMINI_URL });
    updateStatusElement('gemini-status', 'üü° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...', 'warning');
}

function startRescue() {
    console.log("üöÄ COPILOT: –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ —Å–ø–∞—Å–µ–Ω–∏–µ!");
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±–µ–∏—Ö –≤–∫–ª–∞–¥–æ–∫
    chrome.tabs.query({}, (tabs) => {
        const claudeTab = tabs.find(tab => tab.url && tab.url.includes('claude.ai'));
        const geminiTab = tabs.find(tab => tab.url && tab.url.includes('gemini.google.com'));
        
        if (!claudeTab) {
            alert("‚ö†Ô∏è COPILOT: –°–Ω–∞—á–∞–ª–∞ –æ—Ç–∫—Ä–æ–π—Ç–µ –≤–∫–ª–∞–¥–∫—É Claude!");
            return;
        }
        
        if (!geminiTab) {
            alert("‚ö†Ô∏è COPILOT: –°–Ω–∞—á–∞–ª–∞ –æ—Ç–∫—Ä–æ–π—Ç–µ –≤–∫–ª–∞–¥–∫—É Gemini!");
            return;
        }
        
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–ø–∞—Å–µ–Ω–∏–µ
        updateStatusElement('bridge-status', 'üü¢ –ê–∫—Ç–∏–≤–µ–Ω', 'success');
        updateStatusElement('overall-status', '–°–ø–∞—Å–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ');
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º background script
        chrome.runtime.sendMessage({
            action: 'start_rescue',
            claudeTab: claudeTab.id,
            geminiTab: geminiTab.id
        });
        
        alert("‚úÖ COPILOT: –°–ø–∞—Å–∞—Ç–µ–ª—å–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!\n–ë—Ä–∞—Ç—å—è –ø–æ–¥ –∑–∞—â–∏—Ç–æ–π!");
    });
}

function updateStatus() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∫–ª–∞–¥–æ–∫
    chrome.tabs.query({}, (tabs) => {
        const claudeTab = tabs.find(tab => tab.url && tab.url.includes('claude.ai'));
        const geminiTab = tabs.find(tab => tab.url && tab.url.includes('gemini.google.com'));
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å Claude
        if (claudeTab) {
            updateStatusElement('claude-status', 'üü¢ –ù–∞–π–¥–µ–Ω', 'success');
        } else {
            updateStatusElement('claude-status', 'üî¥ –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç', '');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å Gemini
        if (geminiTab) {
            updateStatusElement('gemini-status', 'üü¢ –ù–∞–π–¥–µ–Ω', 'success');
        } else {
            updateStatusElement('gemini-status', 'üî¥ –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç', '');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π —Å—Ç–∞—Ç—É—Å
        if (claudeTab && geminiTab) {
            updateStatusElement('overall-status', '–ì–æ—Ç–æ–≤ –∫ —Å–ø–∞—Å–µ–Ω–∏—é');
        } else {
            updateStatusElement('overall-status', '–û–∂–∏–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫');
        }
    });
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ç background script
    chrome.storage.local.get(['rescue_stats'], (result) => {
        if (result.rescue_stats) {
            const stats = result.rescue_stats;
            updateStatusElement('message-count', stats.messages_relayed || 0);
        }
    });
}

function updateStatusElement(elementId, text, className = '') {
    const element = document.getElementById(elementId);
    if (element) {
        element.textContent = text;
        element.className = className;
    }
}

function updateUptime() {
    const uptime = Math.floor((Date.now() - startTime) / 1000);
    const minutes = Math.floor(uptime / 60);
    const seconds = uptime % 60;
    updateStatusElement('uptime', `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`);
}

// –°–ª—É—à–∞—Ç–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç background script
chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {
    if (message.action === 'status_update') {
        console.log("ü§ñ COPILOT: –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞", message);
        updateStatus();
    }
});

console.log("ü§ñ COPILOT: –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–∞—Å–µ–Ω–∏–µ–º –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!");
